<beans	 xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- redis 配置  -->
    
    
    <!-- 配置  redis-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
       <property name="maxTotal" value="2048" />    
       <property name="maxIdle" value="200" />    
       <property name="numTestsPerEvictionRun" value="1024"/>    
       <property name="timeBetweenEvictionRunsMillis" value="30000" />    
       <property name="minEvictableIdleTimeMillis" value="-1" />    
       <property name="softMinEvictableIdleTimeMillis" value="10000" />    
       <property name="maxWaitMillis" value="1500"/>    
       <property name="testOnBorrow" value="true" />    
       <property name="testWhileIdle" value="true"/>    
       <property name="testOnReturn" value="false"/>    
       <property name="jmxEnabled" value="true"/>    
       <property name="blockWhenExhausted" value="false"/>   
    </bean>  
  
     <!--链接redis-->  
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="hostName" value="${redis.host}"></property>  
        <property name="port" value="${redis.port}"></property>  
        <property name="password" value="${redis.password}"></property>  
        <property name="poolConfig" ref="jedisPoolConfig"></property>  
    </bean>  
    <!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="connectionFactory" >  
        以下针对各种数据进行序列化方式的选择  
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
        <property name="valueSerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
        <property name="hashKeySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
        <property name="hashValueSerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
    </bean> -->  
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">    
	    <property name="connectionFactory" ref="connectionFactory" />    
	    <property name="keySerializer">    
	        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />    
	    </property>    
	    <property name="valueSerializer">    
	        <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />    
	    </property>    
	</bean>  
	<!-- end redis 配置 -->
</beans>