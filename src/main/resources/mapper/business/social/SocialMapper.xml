<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xykj.business.dao.social.SocialDao">
	<resultMap id="base" type="Social"></resultMap>
	<insert id="insert" parameterType="Social">
    	insert into tb_social_advertise (id,sname,sage,sgender,mobile,email,qq,
    	wx,arriveTime,education,graduateYear,graduateFrom,
    	address,createTime,createBy,advisor,source,job,
    	invitor,feedback,teacher,status,isTry,isPay,grade,campusId,tryTime,enrollTime,updateTime) values (
    		#{id},#{sname},#{sage},#{sgender},#{mobile},#{email},#{qq},#{wx},#{arriveTime},
	    	#{education},#{graduateYear},#{graduateFrom},#{address},#{createTime},#{createBy},
	    	#{advisor},#{source},
	    	#{job},#{invitor},#{feedback},#{teacher},#{status},#{isTry},#{isPay},#{grade},#{campusId},
	    	#{tryTime},#{enrollTime},#{updateTime}
    	)
    </insert>

    <delete id="delete" parameterType="Social">
    	delete from tb_social_advertise where id = #{id}
    </delete>
    <!-- 修改 -->
    <update id="update" parameterType="Social">
    	update tb_social_advertise set
    	sname = #{sname},
    	sage = #{sage},
    	sgender = #{sgender},
    	mobile = #{mobile},
    	email = #{email},
    	qq = #{qq},
    	wx = #{wx},
    	arriveTime = #{arriveTime},
    	education = #{education},
    	graduateYear = #{graduateYear},
    	graduateFrom = #{graduateFrom},
    	address = #{address},
    	advisor = #{advisor},
    	source = #{source},
    	job = #{job},
    	invitor = #{invitor},
    	feedback = #{feedback},
    	status = #{status},
    	isTry = #{isTry},
    	isPay = #{isPay},
    	updateBy = #{updateBy},
    	updateTime = #{updateTime},
    	campusId = #{campusId}
    	where id = #{id}
    </update>
	
    <!-- 初始化查询 -->
    <!-- 模糊匹配 -->
    <select id="findByPage" resultMap="base" parameterType="Social">
    	select * from tb_social_advertise t1
    	where 1 = 1 and t1.campusId = #{param.campusId}
    	<!-- 标志为1:上门量查询,不显示无效量和已关单的记录 -->
    	<if test="param.signal == 1">
    		and t1.status != 4 and t1.status != 5 and t1.isTry = 0 and t1.isPay = 0
    	</if>
    	<!-- 标志为2:试学量查询,只显示试学的学员记录 -->
    	<if test="param.signal == 2">
    		and t1.isTry = 1 and t1.isPay = 0
    	</if>
		<!-- 标志为3:报名量查询,只显示报名的学员记录 -->
    	<if test="param.signal == 3">
    		and t1.isPay = 1 and t1.status not in (4,5,6)
    	</if>
    	<!-- 标志为4:无效量查询,只显示试学的学员记录 -->
    	<if test="param.signal == 4">
    		and t1.status = 4
    	</if>
    	<if test="param.status != null and param.status != ''">
    		and t1.status = #{param.status}
    	</if>
    	<!-- 模糊查询人名 -->
    	<if test="param.sname != null and param.sname != ''">
    		and t1.sname like concat('%',#{param.sname},'%')
    	</if>
    	<!-- 模糊查询电话号码 -->
    	<if test="param.mobile != null and param.mobile != ''">
    		and t1.mobile like concat('%',#{param.mobile},'%')
    	</if>
    	<!-- 上门日期 -->
    	<if test="param.arriveTime != null and param.arriveTime != ''">
    		and t1.arriveTime = #{param.arriveTime}
    	</if>
    	<if test="param.advisor != null and param.advisor != ''">
    		and t1.advisor like concat('%',#{param.advisor},'%')
    	</if>
    	order by t1.updateTime desc,t1.createTime desc
    	<!-- 是否已参与试学 
    	<if test="param.isTry != null and param.isTry != ''">
    		and t1.isTry = #{param.isTry}
    	</if>-->
    	<!-- 是否已报名
    	<if test="param.isPay != null and param.isPay != ''">
    		and t1.isPay = #{param.isPay}
    	</if> -->
    </select>
	<!-- 查询单个上门人员信息 -->
    <select id="find" resultType="Social" parameterType="Social">
    	select * from tb_social_advertise where id = #{id}
    </select>
    
    <!-- 试学 -->
    <insert id="tryLearn" parameterType="Social">
    	update tb_social_advertise set isTry = #{isTry},status = #{status} where 
    	id = #{id}
    </insert>
    
    <!-- 报名 -->
    <insert id="pay" parameterType="Social">
    	update tb_social_advertise set isPay = #{isPay},status = #{status} where  id = #{id}
    </insert>
    
    <!-- 无效量 -->
    <insert id="disabled" parameterType="Social">
		update tb_social_advertise set status = #{status} where id =#{id} 
    </insert>
    
    <select id="findByPhone" parameterType="Social" resultType="Social">
    	select * from tb_social_advertise where mobile = #{mobile}
    </select>
    
    
    <!-- 添加试学反馈 -->
    <update id="insertFeedback" parameterType="Social">
    	update tb_social_advertise set tryLearnFeedback = #{tryLearnFeedback} where id = #{id}
    </update>
    
    <!-- 分配咨询师 -->
    <update id="divide" parameterType="Social">
    	update tb_social_advertise set advisor = #{advisor} where id = #{id}
    </update>
    
</mapper>